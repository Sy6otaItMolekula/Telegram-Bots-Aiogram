from aiogram import Bot, types, Dispatcher, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

TOKEN = "YourTOKEN"
storage = MemoryStorage()
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=storage)

class RequestState(StatesGroup):
    WaitingForReq = State()

@dp.message_handler(commands=['req'])
async def start(message: types.Message):
    await message.answer('Напишите мне сообщение которое хотите отправить администратору.')
    await RequestState.WaitingForReq.set()
    
@dp.message_handler(content_types=['text, photo, video, audio, document, sticker'], state=RequestState.WaitingForReq)
async def forward_message_to_admin(message: types.Message, state=FSMContext) -> None:
    admin_id = cfg.ADMIN
    try:
        await bot.forward_message(
            chat_id=admin_id,
            from_chat_id=message.chat.id,
            message_id=message.message_id
        )
        await message.reply('Ваше сообщение было передано администратору.')
    except Exception as e:
        await message.reply(f'Произошла ошибка: {e}')
    await state.finish()

if __name__ == '__main__':
    executor.start_polling(dp)
